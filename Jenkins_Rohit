pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Use Maven to build the code'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Run unit and integration tests using Selenium and JUnit'
            }

            post {
                always {
                    script {
                        def result = currentBuild.result ?: 'SUCCESS'
                        def message = result == 'SUCCESS' ? 'Selenium and JUnit tests successfully completed' : 'The Unit and Integration Testing failed'
                        echo message
                        emailext(
                            to: 'rohitrapter@gmail.com',
                            subject: "Status of Unit and Integration Test: ${result}",
                            body: 'Check the log files to obtain additional information about the process',
                            attachLog: true
                        )
                    }
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Integrate with SonarQube for code analysis'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Perform security scan using OWASP ZAP'
            }

            post {
                always {
                    script {
                        def result = currentBuild.result ?: 'SUCCESS'
                        def message = result == 'SUCCESS' ? 'OWASP ZAP Security Scanning successfully completed' : 'OWASP ZAP Security Scanning failed'
                        echo message
                        emailext(
                            to: 'rohitrapter@gmail.com',
                            subject: "Status of Security Scanning: ${result}",
                            body: 'Check the log files to obtain additional information about the process',
                            attachLog: true
                        )
                    }
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploy application to staging server using AWS CodeDeploy'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Run integration tests on staging environment with Selenium'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploy application to production server using AWS CodeDeploy'
            }
        }
    }
}
